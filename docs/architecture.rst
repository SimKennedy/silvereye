Architecture
============

The OCDS Data Review tool comprises two main parts, which are documented here.

* cove-ocds (`this repository <https://github.com/open-contracting/cove-ocds>`_): a web application which makes light use of Django components.
* lib-cove-ocds (`open-contracting/lib-cove-ocds <https://github.com/open-contracting/lib-cove-ocds>`_): a library containing most of the functions for performing validation and transformation on OCDS data.

cove-ocds
---------

cove_ocds/lib contains OCDS data specific exceptions (errors generated by invalid data or input), as well as additional functions for OCDS Show (the JavaScript data explorer).

cove_ocds also contains fixtures for testing, and the tests themselves; templates and related static files; code for the CLI version of the DRT; and locale files for translations.

cove_ocds/views.py does most of the heavy lifting of taking an input file from the web interface and carrying out the various validation checks and conversions, then piping the output back to the right templates.

cove_project contains the Django components (settings, URL paths, server).


lib-cove-ocds
-------------

lib-cove-ocds contains OCDS data specific functions, but in a way that means they can be reused by other software and scripts without having to import the whole of the DRT to do so. It includes the OCDSSchema object. Most of the validation checks for OCDS data are here.

External libraries
------------------

The OCDS Data Review Tool is just one manifestation of software historically known as 'CoVE' (Convert, Validate, Explore). Instances of CoVE exist for other standards as well as OCDS. We modularise and reuse code where possible, so as a result the DRT has dependencies on external libraries related to CoVE:

* lib-cove (`opendataservices/lib-cove <https://github.com/opendataservces/lib-cove>`_): contains functions and helpers that may be useful for data validation and review, regardless of the particular data standard.
* lib-cove-web (`opendataservices/lib-cove-web <https://github.com/opendataservices/lib-cove-web>`_): provides a barebones Django configuration, and baseline CSS, JS and templates that are common for all CoVE instances. It is also a place for common functions relating to presentation or display of data or output. Any templates edited here typically affect all CoVE instances. Sometimes this is useful, but for OCDS-only changes, templates can be overridden in cove-ocds. This and cove-ocds are the only places where frontend output and translatable strings should be.
* flatten-tool (`opendataservices/lib-cove <https://github.com/opendataservces/flatten-tool>`_): a general purpose library for converting data between JSON and CSV/XLS formats. While not CoVE-specific, it is listed here because it is a specialised tool of which the DRT makes heavy use.

Path through the code
---------------------

When you pass data into the web front end...